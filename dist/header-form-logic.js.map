{
  "version": 3,
  "sources": ["../header-form-logic.js"],
  "sourcesContent": ["document.addEventListener(\"DOMContentLoaded\", function () {\r\n    initializePostcodeLookup(\r\n        \"#delivery-search\",\r\n        \"#delivery-search-button\",\r\n        \"#Delivery-Address-First-Line\",\r\n        \"#Delivery-Address-City\",\r\n        \"#Delivery-Address-Postcode\",\r\n        \"Delivery\"\r\n    );\r\n    initializePostcodeLookup(\r\n        \"#billing-search\",\r\n        \"#billing-search-button\",\r\n        \"#Billing-Address-First-Line\",\r\n        \"#Billing-Address-City\",\r\n        \"#Billing-Address-Postcode\",\r\n        \"Billing\"\r\n    );\r\n\r\n    initializeFormNavigation();\r\n    initializeCheckboxToggle(\r\n        \"#Company-Details-VAT-registered-checkbox\",\r\n        \"#Company-Details-VAT-registration\"\r\n    );\r\n    initializeCompanyTypeSelection();\r\n    initializeDatePicker(\"#Company-Details-Date-picker\");\r\n\r\n    initializePostcodeLookup(\r\n        \"#reg-search\",\r\n        \"#reg-search-button\",\r\n        \"#Reg-Address-First-Line\",\r\n        \"#Reg-Address-City\",\r\n        \"#Reg-Address-Postcode\",\r\n        \"Register\"\r\n    );\r\n\r\n    initializePostcodeLookup(\r\n        \"#trading-search\",\r\n        \"#trading-search-button\",\r\n        \"#Trading-Address-First-Line\",\r\n        \"#Trading-Address-City\",\r\n        \"#Trading-Address-Postcode\",\r\n        \"Trading\"\r\n    );\r\n    initializePostcodeLookup(\r\n        \"#bank-search\",\r\n        \"#bank-search-button\",\r\n        \"#Bank-Address-First-Line\",\r\n        \"#Bank-Address-City\",\r\n        \"#Bank-Address-Postcode\",\r\n        \"Bank\"\r\n    );\r\n    initializeMultiSelect(\"#criteria_other_providers\", \"Select Other providers\");\r\n    initializeMultiSelect(\"#Criteria-Channels\", \"Select Channels\");\r\n    addDefaultOptionToSelect(\"set-default-select\", \"Select\");\r\n    addDefaultOptionToSelect(\"select-modern\", \"Select your address\");\r\n    initializeMultiStepForm();\r\n    toggleButtonWithClass(\"#confirm_agreement_chkbox\", \"#partner_agreement_btn\");\r\n    switchForm(\r\n        \"#confirm_agreement_chkbox\",\r\n        \"#partner_agreement_btn\",\r\n        \"#partner_agreement_form\",\r\n        \"#partner_agreement_confirmation_form\"\r\n    );\r\n    setCurrentDate(\"#partner_agreement_confirmation_cur_date\");\r\n    // Usage: Set the IP address in the target element\r\n    setIPAddress(\"#partner_agreement_confirmation_ip\");\r\n    initializePdfHandler(\"#partner_agreement_confirmation_btn\", {\r\n        curForm: \"#partner_agreement_confirmation_form\",\r\n        nextForm: \"#self_billing_agreement_form\",\r\n        formSelector: \"#partner_agreement_form\",\r\n        title: \"Partner Agreement Confirmation\",\r\n        downloadFilename: \"partner_agreement.pdf\",\r\n        emailFieldName: \"email\",\r\n        webhookUrl:\r\n            \"https://prod-46.uksouth.logic.azure.com/workflows/0725daa15e4a42f996ff2c9b61d9b15f/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=9QTEWPyCdVCJrlTJe5VznGwnAVf_q9N3EthSalMQ8hA\",\r\n    });\r\n\r\n    toggleButtonWithClass(\r\n        \"#confirm_self_billing_agree_chkbox\",\r\n        \"#self_billing_agreement_btn\"\r\n    );\r\n    switchForm(\r\n        \"#confirm_self_billing_agree_chkbox\",\r\n        \"#self_billing_agreement_btn\",\r\n        \"#self_billing_agreement_form\",\r\n        \"#confirmation_self_billing_agree_form\"\r\n    );\r\n    setCurrentDate(\"#self_billing_cur_date\");\r\n    setIPAddress(\"#self_billing_ip\");\r\n    initializePdfHandler(\"#self_billing_confirmation_btn\", {\r\n        curForm: \"#confirmation_self_billing_agree_form\",\r\n        nextForm: \"#confirmation_self_billing_agree_form\",\r\n        formSelector: \"#self_billing_agreement_form\",\r\n        title: \"Self Billing Agreement Confirmation\",\r\n        downloadFilename: \"Self-Billing Agreement.pdf\",\r\n        emailFieldName: \"email\",\r\n        webhookUrl:\r\n            \"https://prod-09.uksouth.logic.azure.com:443/workflows/adc2994fde0c492981e334d10318e3cc/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=ODswH80OD7bbrkK12RH3snBpuArTY2Xkurs26K6jDwg\",\r\n    });\r\n    initializeFileUpload(\"vat-file-upload\");\r\n    initializeVATUploadCheckbox(\r\n        \"Company-Details-VAT-registered-checkbox\",\r\n        \"vat-file-upload\"\r\n    );\r\n    hideElementsBySelector(\".choices__input--cloned\");\r\n    addDynamicPlaceholder(\".choices\", \"Select\");\r\n    sameAsAddr(\r\n        \"Trading-Address\",\r\n        \"Trading-Address-First-Line\",\r\n        \"Trading-Address-Second-Line\",\r\n        \"Trading-Address-Third-Line\",\r\n        \"Trading-Address-City\",\r\n        \"Trading-Address-Postcode\"\r\n    );\r\n    sameAsAddr(\r\n        \"Billing-Address\",\r\n        \"Billing-Address-First-Line\",\r\n        \"Billing-Address-Second-Line\",\r\n        \"Billing-Address-Third-Line\",\r\n        \"Billing-Address-City\",\r\n        \"Billing-Address-Postcode\"\r\n    );\r\n    sameAsAddr(\r\n        \"Delivery-Address\",\r\n        \"Delivery-Address-First-Line\",\r\n        \"Delivery-Address-Second-Line\",\r\n        \"Delivery-Address-Third-Line\",\r\n        \"Delivery-Address-City\",\r\n        \"Delivery-Address-Postcode\"\r\n    );\r\n\r\n    otherEvent(\"Trading-Address\", \"addr-trading\");\r\n    otherEvent(\"Billing-Address\", \"addr-billing\");\r\n    otherEvent(\"Delivery-Address\", \"addr-delivery\");\r\n\r\n    copyContactDetails(\r\n        \"Contact-Master-User\",\r\n        \"Master-Contacts-Title\",\r\n        \"Master-Contacts-First-Name\",\r\n        \"Master-Contact-Last-Name\",\r\n        \"Master-Contact-Role-Dropdown\",\r\n        \"Master-Contacts-Job-title\",\r\n        \"Master-Contacts-Mobile-Phonenumber\",\r\n        \"Master-Contacts-Email\",\r\n        \"Master-Contacts-Authorised-signatory-checkbox\",\r\n        \"Master-Contacts-Portal-user-checkbox\"\r\n    );\r\n    copyContactDetails(\r\n        \"Contacts-Renewal-Contact\",\r\n        \"Renewal-Contacts-Title\",\r\n        \"Renewal-Contacts-First-Name\",\r\n        \"Renewal-Contact-Last-Name\",\r\n        \"Renewal-Contact-Role-Dropdown\",\r\n        \"Renewal-Contacts-Job-title\",\r\n        \"Renewal-Contacts-Mobile-Phonenumber\",\r\n        \"Renewal-Contacts-Email\",\r\n        \"Renewal-Contacts-Authorised-signatory-checkbox\",\r\n        \"Renewal-Contacts-Portal-user-checkbox\"\r\n    );\r\n    copyContactDetails(\r\n        \"Contacts-Financial-Contact\",\r\n        \"Financial-Contacts-Title\",\r\n        \"Financial-Contacts-First-Name\",\r\n        \"Financial-Contact-Last-Name\",\r\n        \"Financial-Contact-Role-Dropdown\",\r\n        \"Financial-Contacts-Job-title\",\r\n        \"Financial-Contacts-Mobile-Phonenumber\",\r\n        \"Financial-Contacts-Email\",\r\n        \"Financial-Contacts-Authorised-signatory-checkbox\",\r\n        \"Financial-Contacts-Portal-user-checkbox\"\r\n    );\r\n\r\n    otherEvent(\"Contact-Master-User\", \"contacts-master-page\");\r\n    otherEvent(\"Contacts-Renewal-Contact\", \"contacts-renewal-page\");\r\n    otherEvent(\"Contacts-Financial-Contact\", \"contacts-financial-page\");\r\n    // Usage: Call this function for any dropdown class or ID\r\n    setDropdownColor(\".select-field\");\r\n});\r\n\r\nfunction setDropdownColor(\r\n    selector,\r\n    defaultColor = \"#b1b1b1\",\r\n    selectedColor = \"rgb(0, 0, 0)\"\r\n) {\r\n    const dropdowns = document.querySelectorAll(selector);\r\n\r\n    dropdowns.forEach((dropdown) => {\r\n        function updateColor() {\r\n            dropdown.style.color = dropdown.value ? selectedColor : defaultColor;\r\n        }\r\n\r\n        // Initialize color on page load\r\n        updateColor();\r\n\r\n        // Update color on selection change\r\n        dropdown.addEventListener(\"change\", updateColor);\r\n    });\r\n}\r\n\r\nfunction moveNext(current, nextId) {\r\n    let value = current.value.replace(/\\D/g, \"\"); // Remove non-digits\r\n    current.value = value;\r\n    if (current.value.length === 2) {\r\n        document.getElementById(nextId).focus(); // Move to the next field\r\n    }\r\n}\r\n\r\nasync function generatePDFPartner(title, formData) {\r\n    try {\r\n        // Hide .no-print elements at the start of the try block\r\n        document.querySelectorAll('.no-print').forEach(el => {\r\n            el.style.display = 'none';\r\n        });\r\n\r\n        // Clone content safely\r\n        let extractedContent = document.createElement(\"div\");\r\n        extractedContent.innerHTML = Array.from(\r\n            document.querySelectorAll(\"#pdf-content .w-embed\")\r\n        )\r\n            .map((element) => element.outerHTML)\r\n            .join(\"\");\r\n\r\n        extractedContent.style.fontSize = \"9px\"; // Adjust as needed\r\n        // Change font size for headers (h1 to h6)\r\n        extractedContent.querySelectorAll(\"h1\").forEach(el => el.style.fontSize = \"17px\");\r\n        extractedContent.querySelectorAll(\"h2\").forEach(el => el.style.fontSize = \"15px\");\r\n        extractedContent.querySelectorAll(\"h3\").forEach(el => el.style.fontSize = \"13px\");\r\n        extractedContent.querySelectorAll(\"h4\").forEach(el => el.style.fontSize = \"12px\");\r\n        extractedContent.querySelectorAll(\"h5\").forEach(el => el.style.fontSize = \"11px\");\r\n        extractedContent.querySelectorAll(\"h6\").forEach(el => el.style.fontSize = \"10px\");\r\n\r\n        extractedContent.style.lineHeight = \"1.3\"; // Adjust as needed, 1 is compact\r\n        extractedContent.querySelectorAll(\"h1, h2, h3, h4, h5, h6\").forEach(el => {\r\n            el.style.lineHeight = \"1\"; // Adjust as needed (1 is compact, 1.2 is standard)\r\n        });\r\n        // Delay to allow images and styles to load properly\r\n        await new Promise((resolve) => setTimeout(resolve, 500));\r\n\r\n        // Define high-quality PDF options\r\n        const options = {\r\n            margin: [15, 15, 15, 15], // Reduce margins slightly\r\n            filename: title,\r\n            image: { type: \"jpeg\", quality: 1 }, // Use PNG for higher quality\r\n            html2canvas: {\r\n                scale: 1, // Increase scale for high resolution\r\n                useCORS: true,\r\n                logging: false,\r\n                scrollX: 0,\r\n                scrollY: 0,\r\n                allowTaint: true,\r\n            },\r\n            jsPDF: {\r\n                unit: \"mm\",\r\n                format: \"a4\",\r\n                orientation: \"portrait\",\r\n                precision: 12, // Keep precision high\r\n            },\r\n        };\r\n\r\n        // Convert content to PDF\r\n        const pdf = await html2pdf()\r\n            .set(options)\r\n            .from(extractedContent)\r\n            .toPdf()\r\n            .get(\"pdf\");\r\n        const firstName =\r\n            document.getElementById(\"Contacts-First-Name\").value || \"\";\r\n        const lastName = document.getElementById(\"Contact-Last-Name\").value || \"\";\r\n        const companyName =\r\n            document.getElementById(\"Company-Details-Company-name\").value || \"\";\r\n        // Get current date in DD/MM/YYYY format\r\n        const today = new Date();\r\n        const formattedDate = `${today.getDate()}/${today.getMonth() + 1\r\n            }/${today.getFullYear()}`;\r\n        // Get total number of pages\r\n        const totalPages = pdf.internal.getNumberOfPages();\r\n\r\n        // Get the footer HTML content\r\n        //let footerContent = document.querySelector(\"#pdf-footer\").innerHTML;\r\n\r\n        // Add footer content to the last page\r\n        pdf.setPage(totalPages);\r\n\r\n        // Get page width and height\r\n        const pageWidth = pdf.internal.pageSize.getWidth();\r\n        const pageHeight = pdf.internal.pageSize.getHeight();\r\n\r\n        // Draw a grey rectangle for the footer background\r\n        const footerHeight = 30; // Height of the footer background\r\n        pdf.setFillColor(200, 200, 200); // Grey color (RGB)\r\n        pdf.rect(0, pageHeight - footerHeight, pageWidth, footerHeight, 'F'); // 'F' for fill\r\n\r\n        // Set font for the footer text\r\n        pdf.setFontSize(10);\r\n        pdf.setTextColor(0, 0, 0); // Black text\r\n\r\n        // Add the footer text content (left side)\r\n        pdf.text(\"Signed by: Tom Wollin\", 25, pageHeight - footerHeight + 10); // Left signature\r\n        pdf.text(\"On behalf of: plan.com\", 25, pageHeight - footerHeight + 15);\r\n        pdf.text(`Date: ${formattedDate}`, 25, pageHeight - footerHeight + 20);\r\n\r\n        // Add the footer text content (right side)\r\n        pdf.text(`Signed by: ${firstName} ${lastName}`, pageWidth / 2 + 25, pageHeight - footerHeight + 10); // Right signature\r\n        pdf.text(`On behalf of: ${companyName}`, pageWidth / 2 + 25, pageHeight - footerHeight + 15);\r\n        pdf.text(`Date: ${formattedDate}`, pageWidth / 2 + 25, pageHeight - footerHeight + 20);\r\n\r\n        // Save the PDF\r\n        await pdf.save(\"Partner Agreement.pdf\");\r\n\r\n        // Show them again at the end of the try block \r\n        document.querySelectorAll('.no-print').forEach(el => {\r\n            el.style.display = '';\r\n        });\r\n\r\n        return pdf;\r\n    } catch (error) {\r\n        // Always restore header/footer even if it breaks\r\n        document.querySelectorAll('.no-print').forEach(el => {\r\n            el.style.display = '';\r\n        });\r\n        console.error(\"Error generating PDF:\", error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nfunction copyContactDetails(\r\n    eventID,\r\n    title,\r\n    firstname,\r\n    lastname,\r\n    role,\r\n    jobtitle,\r\n    mobile,\r\n    email,\r\n    authorised,\r\n    portal\r\n) {\r\n    document.getElementById(eventID).addEventListener(\"change\", function () {\r\n        if (this.value === \"Same as Primary Contact\") {\r\n            // Define mappings between source and target elements\r\n            const fieldMappings = [\r\n                { source: \"Contacts-Title\", target: title },\r\n                { source: \"Contacts-First-Name\", target: firstname },\r\n                { source: \"Contact-Last-Name\", target: lastname },\r\n                { source: \"Contact-Role-Dropdown\", target: role },\r\n                { source: \"Contacts-Job-title\", target: jobtitle },\r\n                { source: \"Contacts-Mobile-Phonenumber\", target: mobile },\r\n                { source: \"Contacts-Email\", target: email },\r\n                {\r\n                    source: \"Contacts-Authorised-signatory-checkbox\",\r\n                    target: authorised,\r\n                    type: \"checkbox\",\r\n                },\r\n                {\r\n                    source: \"Contacts-Portal-user-checkbox\",\r\n                    target: portal,\r\n                    type: \"checkbox\",\r\n                },\r\n            ];\r\n\r\n            fieldMappings.forEach(({ source, target, type }) => {\r\n                const sourceElement = document.getElementById(source);\r\n                const targetElement = document.getElementById(target);\r\n\r\n                if (sourceElement && targetElement) {\r\n                    if (type === \"checkbox\") {\r\n                        targetElement.checked = sourceElement.checked;\r\n                    } else {\r\n                        targetElement.value = sourceElement.value;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction otherEvent(eventID, targetID) {\r\n    document.getElementById(eventID).addEventListener(\"change\", function () {\r\n        const tradingDiv = document.getElementById(targetID);\r\n        tradingDiv.style.display = this.value === \"Other\" ? \"block\" : \"none\";\r\n    });\r\n}\r\n\r\nfunction handleContactSameAsPrimary(selectedId) {\r\n    // Define contact mappings with target fields to be copied from Master Contact\r\n    const contactMappings = {\r\n        \"Contact-Master-User\": [\r\n            \"Master-Contacts-Title\",\r\n            \"Master-Contacts-First-Name\",\r\n            \"Master-Contact-Last-Name\",\r\n            \"Master-Contact-Role-Dropdown\",\r\n            \"Master-Contacts-Job-title\",\r\n            \"Master-Contacts-Mobile-Phonenumber\",\r\n            \"Master-Contacts-Email\",\r\n            \"Master-Contacts-Authorised-signatory-checkbox\",\r\n            \"Master-Contacts-Portal-user-checkbox\",\r\n        ],\r\n        \"Contacts-Renewal-Contact\": [\r\n            \"Renewal-Contacts-Title\",\r\n            \"Renewal-Contacts-First-Name\",\r\n            \"Renewal-Contact-Last-Name\",\r\n            \"Renewal-Contact-Role-Dropdown\",\r\n            \"Renewal-Contacts-Job-title\",\r\n            \"Renewal-Contacts-Mobile-Phonenumber\",\r\n            \"Renewal-Contacts-Email\",\r\n            \"Renewal-Contacts-Authorised-signatory-checkbox\",\r\n            \"Renewal-Contacts-Portal-user-checkbox\",\r\n        ],\r\n        \"Contacts-Financial-Contact\": [\r\n            \"Financial-Contacts-Title\",\r\n            \"Financial-Contacts-First-Name\",\r\n            \"Financial-Contact-Last-Name\",\r\n            \"Financial-Contact-Role-Dropdown\",\r\n            \"Financial-Contacts-Job-title\",\r\n            \"Financial-Contacts-Mobile-Phonenumber\",\r\n            \"Financial-Contacts-Email\",\r\n            \"Financial-Contacts-Authorised-signatory-checkbox\",\r\n            \"Financial-Contacts-Portal-user-checkbox\",\r\n        ],\r\n    };\r\n\r\n    // Check if the selected ID exists in the mappings\r\n    if (contactMappings[selectedId]) {\r\n        // console.log(\"contactMapping\", selectedId);\r\n        // Call copyContactDetails function to copy the values\r\n        checkCopyContactDetails(selectedId, ...contactMappings[selectedId]);\r\n    }\r\n}\r\nfunction checkCopyContactDetails(\r\n    eventId,\r\n    title,\r\n    firstname,\r\n    lastname,\r\n    role,\r\n    jobtitle,\r\n    mobile,\r\n    email,\r\n    authorised,\r\n    portal\r\n) {\r\n    const selectElement = document.getElementById(eventId);\r\n    if (!selectElement) return; // Exit if the dropdown doesn't exist\r\n    function updateContactFields(value) {\r\n        if (value === \"Same as Primary Contact\") {\r\n            // Define mappings between source and target elements\r\n            const fieldMappings = [\r\n                { source: \"Contacts-Title\", target: title },\r\n                { source: \"Contacts-First-Name\", target: firstname },\r\n                { source: \"Contact-Last-Name\", target: lastname },\r\n                { source: \"Contact-Role-Dropdown\", target: role },\r\n                { source: \"Contacts-Job-title\", target: jobtitle },\r\n                { source: \"Contacts-Mobile-Phonenumber\", target: mobile },\r\n                { source: \"Contacts-Email\", target: email },\r\n                {\r\n                    source: \"Contacts-Authorised-signatory-checkbox\",\r\n                    target: authorised,\r\n                    type: \"checkbox\",\r\n                },\r\n                {\r\n                    source: \"Contacts-Portal-user-checkbox\",\r\n                    target: portal,\r\n                    type: \"checkbox\",\r\n                },\r\n            ];\r\n\r\n            fieldMappings.forEach(({ source, target, type }) => {\r\n                const sourceElement = document.getElementById(source);\r\n                const targetElement = document.getElementById(target);\r\n\r\n                if (sourceElement && targetElement) {\r\n                    if (type === \"checkbox\") {\r\n                        targetElement.checked = sourceElement.checked;\r\n                    } else {\r\n                        targetElement.value = sourceElement.value;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    // Run on page load (if preselected)\r\n    updateContactFields(selectElement.value);\r\n    // Listen for changes in the dropdown\r\n    //   selectElement.addEventListener(\"change\", updateContactFields);\r\n}\r\n\r\nfunction checkSelectedAdditionalValue(selector, targetValue, callback) {\r\n    const dropdowns = document.querySelectorAll(selector);\r\n    //   console.log(\"dropdowns:\", dropdowns);\r\n    dropdowns.forEach((dropdown) => {\r\n        if (dropdown.value === targetValue && typeof callback === \"function\") {\r\n            //   console.log(dropdown.id);\r\n            callback(dropdown.id); // Pass the selected dropdown ID to the callback\r\n        }\r\n    });\r\n}\r\nfunction handleAddressSameAsPrimary(selectedId) {\r\n    //   console.log(\"handleAddressSameAsPrimary:\", selectedId);\r\n    const addressMappings = {\r\n        \"Trading-Address\": [\r\n            \"Trading-Address-First-Line\",\r\n            \"Trading-Address-Second-Line\",\r\n            \"Trading-Address-Third-Line\",\r\n            \"City-Trading-Address\",\r\n            \"Trading-Address-Postcode\",\r\n        ],\r\n        \"Billing-Address\": [\r\n            \"Billing-Address-First-Line\",\r\n            \"Billing-Address-Second-Line\",\r\n            \"Billing-Address-Third-Line\",\r\n            \"City-Billing-Address\",\r\n            \"Billing-Address-Postcode\",\r\n        ],\r\n        \"Delivery-Address\": [\r\n            \"Delivery-Address-First-Line\",\r\n            \"Delivery-Address-Second-Line\",\r\n            \"Delivery-Address-Third-Line\",\r\n            \"City-Delivery-Address\",\r\n            \"Delivery-Address-Postcode\",\r\n        ],\r\n    };\r\n\r\n    if (addressMappings[selectedId]) {\r\n        // console.log(\"addressMapping\", selectedId);\r\n        checkSameAsAddr(selectedId, ...addressMappings[selectedId]);\r\n    }\r\n}\r\n\r\nfunction checkSameAsAddr(eventId, addr1, addr2, addr3, city, postcode) {\r\n    const selectElement = document.getElementById(eventId);\r\n    //   console.log(\"checkSameAsAddr:\", checkSameAsAddr);\r\n    if (!selectElement) return; // Exit if the dropdown doesn't exist\r\n\r\n    function updateAddressFields(value) {\r\n        if (value === \"Same as registered address\") {\r\n            // Define mappings from primary registered address fields to target fields\r\n            const idMappings = {\r\n                \"Reg-Address-First-Line\": addr1,\r\n                \"Reg-Address-Second-Line\": addr2,\r\n                \"Reg-Address-Third-Line\": addr3,\r\n                \"Reg-Address-City\": city,\r\n                \"Reg-Address-Postcode\": postcode,\r\n            };\r\n\r\n            Object.keys(idMappings).forEach((sourceId) => {\r\n                const targetId = idMappings[sourceId];\r\n                const sourceElement = document.getElementById(sourceId);\r\n                const targetElement = document.getElementById(targetId);\r\n\r\n                if (sourceElement && targetElement) {\r\n                    targetElement.value = sourceElement.value; // Copy the value\r\n                }\r\n            });\r\n        }\r\n    }\r\n    // Run once on page load (if needed)\r\n    updateAddressFields(selectElement.value);\r\n    // Attach event listener to run when selection changes\r\n    //   selectElement.addEventListener(\"change\", updateAddressFields);\r\n}\r\n\r\nfunction sameAsAddr(eventId, addr1, addr2, addr3, city, postcode) {\r\n    const selectElement = document.getElementById(eventId);\r\n\r\n    selectElement.addEventListener(\"change\", function () {\r\n        if (selectElement.value === \"Same as registered address\") {\r\n            // Define mappings from id1 -> id2, id3 -> id4, etc.\r\n            const idMappings = {\r\n                \"Reg-Address-First-Line\": addr1,\r\n                \"Reg-Address-Second-Line\": addr2,\r\n                \"Reg-Address-Third-Line\": addr3,\r\n                \"Reg-Address-City\": city,\r\n                \"Reg-Address-Postcode\": postcode,\r\n            };\r\n\r\n            Object.keys(idMappings).forEach((sourceId) => {\r\n                const targetId = idMappings[sourceId];\r\n                const sourceElement = document.getElementById(sourceId);\r\n                const targetElement = document.getElementById(targetId);\r\n\r\n                if (sourceElement && targetElement) {\r\n                    targetElement.value = sourceElement.value;\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction updateElementValue(sourceId, targetId) {\r\n    // Get the HTML content of the source element\r\n    const sourceContent = document.getElementById(sourceId).value || \"\";\r\n    // Set the content of the target element\r\n    document.getElementById(targetId).innerHTML = `<strong>${\" \" + sourceContent\r\n        }</strong>`;\r\n}\r\n\r\nfunction addDynamicPlaceholder(selector, placeholderText) {\r\n    document.querySelectorAll(selector).forEach((choicesContainer) => {\r\n        const choicesInner = choicesContainer.querySelector(\".choices__inner\");\r\n        const selectedItems = choicesContainer.querySelector(\r\n            \".choices__list--multiple\"\r\n        );\r\n        if (!choicesInner || !selectedItems) return; // Skip if elements are missing\r\n        let placeholder = choicesContainer.querySelector(\".custom-placeholder\");\r\n        if (!placeholder) {\r\n            placeholder = document.createElement(\"span\");\r\n            placeholder.className = \"custom-placeholder\";\r\n            placeholder.textContent = placeholderText;\r\n            placeholder.style.color = \"black\"; // Light gray text\r\n            placeholder.style.position = \"absolute\";\r\n            placeholder.style.left = \"10px\";\r\n            placeholder.style.top = \"50%\";\r\n            placeholder.style.transform = \"translateY(-50%)\";\r\n            placeholder.style.pointerEvents = \"none\"; // Prevent interactions\r\n\r\n            choicesInner.style.position = \"relative\"; // Ensure positioning works\r\n            choicesInner.appendChild(placeholder);\r\n        }\r\n\r\n        function updatePlaceholderVisibility() {\r\n            if (selectedItems.children.length > 0) {\r\n                placeholder.style.display = \"none\"; // Hide placeholder if items exist\r\n            } else {\r\n                placeholder.style.display = \"block\"; // Show if no items are selected\r\n            }\r\n        }\r\n\r\n        // Initial check on page load\r\n        updatePlaceholderVisibility();\r\n\r\n        // Observe changes in selected items and update placeholder visibility\r\n        const observer = new MutationObserver(updatePlaceholderVisibility);\r\n        observer.observe(selectedItems, { childList: true });\r\n    });\r\n}\r\n\r\nfunction hideElementsBySelector(selector) {\r\n    document.querySelectorAll(selector).forEach((element) => {\r\n        element.hidden = true;\r\n    });\r\n}\r\n\r\nfunction initializeVATUploadCheckbox(checkboxId, uploadContainerId) {\r\n    const vatCheckbox = document.getElementById(checkboxId);\r\n    const vatUploadContainer = document.getElementById(uploadContainerId);\r\n    const vatFileInput = vatUploadContainer.querySelector(\"input[type='file']\");\r\n    const errorMessage = vatUploadContainer.nextElementSibling; // Error message element\r\n\r\n    if (!vatCheckbox || !vatUploadContainer || !vatFileInput || !errorMessage) {\r\n        console.error(\"Missing required elements for VAT checkbox control.\");\r\n        return;\r\n    }\r\n\r\n    // Function to toggle the file upload state\r\n    function toggleFileUpload() {\r\n        const isChecked = vatCheckbox.checked;\r\n\r\n        // Enable or disable the file upload\r\n        vatFileInput.disabled = !isChecked;\r\n        vatUploadContainer.style.opacity = isChecked ? \"1\" : \"0.5\";\r\n        vatUploadContainer.style.pointerEvents = isChecked ? \"auto\" : \"none\";\r\n\r\n        // Reset the file input and error message if disabled\r\n        if (!isChecked) {\r\n            vatFileInput.value = \"\";\r\n            errorMessage.style.display = \"none\";\r\n            clearPreview(vatUploadContainer);\r\n        }\r\n    }\r\n\r\n    // Clear the file preview\r\n    function clearPreview(container) {\r\n        const previewContainer = container.querySelector(\".file-preview-container\");\r\n        const fileNameDisplay = container.querySelector(\".file-upload-name\");\r\n        const fileInput = container.querySelector(\"input[type='file']\");\r\n\r\n        if (previewContainer) previewContainer.innerHTML = \"\";\r\n        if (fileNameDisplay) fileNameDisplay.textContent = \"No file chosen\";\r\n        if (fileInput) fileInput.value = \"\";\r\n    }\r\n    toggleFileUpload();\r\n    vatCheckbox.addEventListener(\"change\", toggleFileUpload);\r\n}\r\n\r\nfunction initializeFileUpload(containerId) {\r\n    const container = document.getElementById(containerId);\r\n    if (!container) return console.error(`Container ${containerId} not found`);\r\n\r\n    const fileInput = container.querySelector(\"input[type='file']\");\r\n    const fileNameDisplay = container.querySelector(\".file-upload-name\");\r\n    const previewContainer = container.querySelector(\".file-preview-container\");\r\n    const uploadIcon = container.querySelector(\".file-upload-icon\");\r\n\r\n    if (!fileInput || !fileNameDisplay || !previewContainer || !uploadIcon) {\r\n        return console.error(\"Missing required elements in\", containerId);\r\n    }\r\n\r\n    // Handle file selection\r\n    fileInput.addEventListener(\"change\", () =>\r\n        handleFileChange(fileInput, fileNameDisplay, previewContainer, uploadIcon)\r\n    );\r\n\r\n    // Handle file change and preview\r\n    function handleFileChange(input, nameDisplay, preview, icon) {\r\n        const file = input.files[0];\r\n        clearPreview(preview); // Reset preview\r\n\r\n        if (!file) {\r\n            nameDisplay.textContent = \"No file chosen\";\r\n            icon.style.display = \"block\"; // Show icon when no file is selected\r\n            return;\r\n        }\r\n\r\n        nameDisplay.textContent = file.name;\r\n        icon.style.display = \"none\"; // Hide icon when file is selected\r\n\r\n        // Show preview (images, PDFs, or other types)\r\n        if (file.type.startsWith(\"image/\")) {\r\n            createImagePreview(file, preview);\r\n        } else if (file.type === \"application/pdf\") {\r\n            createTextPreview(\"PDF File Selected\", preview);\r\n        } else {\r\n            createTextPreview(`File: ${file.name}`, preview);\r\n        }\r\n\r\n        // Add remove button\r\n        createRemoveButton(input, preview, nameDisplay, icon);\r\n    }\r\n\r\n    // Create image preview\r\n    function createImagePreview(file, preview) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            const img = document.createElement(\"img\");\r\n            img.className = \"file-preview-image\";\r\n            img.src = e.target.result;\r\n            preview.appendChild(img);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    // Create text preview (for PDFs or other files)\r\n    function createTextPreview(text, preview) {\r\n        const textElement = document.createElement(\"p\");\r\n        textElement.className = \"file-preview-text\";\r\n        textElement.textContent = text;\r\n        preview.appendChild(textElement);\r\n    }\r\n\r\n    // Create remove button\r\n    function createRemoveButton(input, preview, nameDisplay, icon) {\r\n        const removeButton = document.createElement(\"button\");\r\n        removeButton.type = \"button\";\r\n        removeButton.className = \"file-remove-btn\";\r\n        removeButton.innerHTML = `<i class=\"bi bi-trash\"></i> Remove`;\r\n\r\n        removeButton.addEventListener(\"click\", () => {\r\n            input.value = \"\";\r\n            nameDisplay.textContent = \"No file chosen\";\r\n            clearPreview(preview);\r\n            icon.style.display = \"block\"; // Show icon again\r\n        });\r\n\r\n        preview.appendChild(removeButton);\r\n    }\r\n\r\n    // Clear the preview area\r\n    function clearPreview(preview) {\r\n        preview.innerHTML = \"\";\r\n    }\r\n}\r\n\r\n// Function to apply the format for supplier and customer fields\r\nfunction formatSelfBillingInputs() {\r\n    const companyName = document.querySelector(\"#Company-Details-Company-name\");\r\n    const vatRegistration = document.querySelector(\r\n        \"#Company-Details-VAT-registration\"\r\n    );\r\n\r\n    const supplierInput = document.querySelector(\"#supplier\");\r\n    const supplierVatInput = document.querySelector(\"#supplier_VAT_number\");\r\n    const customerInput = document.querySelector(\"#customer\");\r\n    const customerVatInput = document.querySelector(\"#customer_VAT_number\");\r\n\r\n    // Format #supplier as #Company-Details-Company-name\r\n    if (companyName) {\r\n        supplierInput.value = `${companyName.value}`;\r\n    }\r\n\r\n    // Format #supplier_VAT_number as #Company-Details-VAT-registration\r\n    if (vatRegistration && vatRegistration.value) {\r\n        supplierVatInput.value = `${vatRegistration.value}`;\r\n    } else {\r\n        // If #Company-Details-VAT-registration is empty, use \"Not VAT registered\"\r\n        supplierVatInput.value = `Not VAT registered`;\r\n    }\r\n\r\n    // Format #customer as value-plan.com\r\n    if (customerInput) {\r\n        customerInput.value = `plan.com`;\r\n    }\r\n\r\n    // Format #customer_VAT_number as GB 0004 1360 38\r\n    if (customerVatInput) {\r\n        customerVatInput.value = \"GB 0004 1360 38\";\r\n    }\r\n    supplierInput.setAttribute(\"readonly\", true);\r\n    supplierVatInput.setAttribute(\"readonly\", true);\r\n    customerInput.setAttribute(\"readonly\", true);\r\n    customerVatInput.setAttribute(\"readonly\", true);\r\n}\r\n// Load jsPDF dynamically (if not already loaded)\r\nasync function loadJsPDF() {\r\n    if (!window.jsPDF) {\r\n        const script = document.createElement(\"script\");\r\n        script.src =\r\n            \"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\";\r\n        document.head.appendChild(script);\r\n        await new Promise((resolve) => (script.onload = resolve));\r\n    }\r\n}\r\n\r\n// Generic function to collect form data\r\nfunction collectFormData(formSelector) {\r\n    const form = document.querySelector(formSelector);\r\n    if (!form) {\r\n        console.error(`Form not found: ${formSelector}`);\r\n        return null;\r\n    }\r\n\r\n    const data = {};\r\n    form.querySelectorAll(\"input, textarea, select\").forEach((field) => {\r\n        if (field.type === \"checkbox\") {\r\n            data[field.name] = field.checked;\r\n        } else if (field.type === \"file\" && field.files.length > 0) {\r\n            data[field.name] = field.files[0];\r\n        } else {\r\n            data[field.name] = field.value;\r\n        }\r\n    });\r\n    const first_name = document.getElementById(\"Contacts-First-Name\").value;\r\n    const last_name = document.getElementById(\"Contact-Last-Name\").value;\r\n\r\n    data[\"full_name\"] = `${first_name + \" \" + last_name}`;\r\n    return data;\r\n}\r\n\r\n// Generate PDF from form data with modern styling\r\nasync function generatePDFSelfBilling(title, formData) {\r\n    await loadJsPDF();\r\n    const { jsPDF } = window.jspdf;\r\n\r\n    const doc = new jsPDF();\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.setFontSize(14);\r\n    // Add 'plan.com' mark at top right\r\n    // Define position\r\n    const text = \"plan\";\r\n    const x = doc.internal.pageSize.width - 80;\r\n    const y = 25;\r\n    const dotX = x + 29; // Adjust position for dot\r\n    const dotY = 24; // Adjust vertical position for dot\r\n\r\n    // Set custom font and bold style\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.setFontSize(38);\r\n\r\n    // Add \"plan\"\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(text, x, y);\r\n\r\n    // Draw a perfect round dot\r\n    doc.setFillColor(0, 0, 0); // Black color\r\n    doc.circle(dotX, dotY, 1, \"F\"); // Small filled circle\r\n\r\n    // Add \"com\" after the dot\r\n    doc.text(\"com\", dotX + 1, y);\r\n\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.setFontSize(20);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(\"Self-Billing Agreement\", 20, 45);\r\n    doc.setFontSize(12);\r\n    doc.text(\"This is an agreement to a self-billing procedure between:\", 20, 60);\r\n\r\n    doc.setFontSize(10);\r\n    doc.setTextColor(43, 124, 246);\r\n    doc.text(`The Customer: `, 20, 70);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(`${formData[\"customer\"] || \"plan.com\"}`, 50, 70);\r\n\r\n    doc.setTextColor(43, 124, 246);\r\n    doc.text(`The Supplier: `, 20, 80);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(`${formData[\"supplier\"] || \"\"}`, 50, 80);\r\n    doc.setFontSize(10);\r\n    doc.setTextColor(43, 124, 246);\r\n    doc.text(`VAT number: `, doc.internal.pageSize.width / 2 + 20, 70);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(\r\n        `${formData[\"customer_VAT_number\"] || \"GB 0004 1360 38\"}`,\r\n        doc.internal.pageSize.width / 2 + 28 + 20,\r\n        70\r\n    );\r\n    doc.setTextColor(43, 124, 246);\r\n    doc.text(`VAT number: `, doc.internal.pageSize.width / 2 + 20, 80);\r\n    doc.setTextColor(0, 0, 0);\r\n    doc.text(\r\n        `${formData[\"Company-Details-VAT-registration\"] || \"Not VAT registered\"}`,\r\n        doc.internal.pageSize.width / 2 + 28 + 20,\r\n        80\r\n    );\r\n    doc.setFontSize(12);\r\n    doc.text(\"The self-biller (the customer) agrees:\", 20, 100);\r\n    doc.setFontSize(10);\r\n    doc.text(\r\n        \"1. To issue self-billed invoices for all supplies made to them by the self-billee until 5 years from today\u2019s date.\",\r\n        25,\r\n        110,\r\n        { maxWidth: 160 }\r\n    );\r\n    doc.text(\r\n        \"2. To complete self-billed invoices showing the supplier's details, including VAT registration number.\",\r\n        25,\r\n        120,\r\n        { maxWidth: 160 }\r\n    );\r\n    doc.text(\r\n        \"3. To make a new self-billing agreement if their VAT registration number changes.\",\r\n        25,\r\n        130,\r\n        { maxWidth: 160 }\r\n    );\r\n    doc.text(\r\n        \"4. To inform the supplier if self-billed invoices are outsourced to a third party.\",\r\n        25,\r\n        140,\r\n        { maxWidth: 160 }\r\n    );\r\n\r\n    doc.setFontSize(12);\r\n    doc.text(\"The self-billee (the supplier) agrees:\", 20, 160);\r\n    doc.setFontSize(10);\r\n    doc.text(\r\n        \"1. To accept invoices raised by the self-biller on their behalf until 5 years from today\u2019s date.\",\r\n        25,\r\n        170,\r\n        { maxWidth: 160 }\r\n    );\r\n    doc.text(\r\n        \"2. Not to raise sales invoices for transactions covered by this agreement.\",\r\n        25,\r\n        180,\r\n        { maxWidth: 160 }\r\n    );\r\n    doc.text(\"3. To notify the customer immediately if they:\", 25, 190);\r\n    doc.text(\"   - Change their VAT registration number\", 30, 200);\r\n    doc.text(\"   - Cease to be VAT registered\", 30, 210);\r\n    doc.text(\"   - Sell their business or part of it\", 30, 220);\r\n    // Footer with grey background\r\n    doc.setFillColor(169, 169, 169); // Grey color\r\n    doc.rect(\r\n        0,\r\n        doc.internal.pageSize.height - 60,\r\n        doc.internal.pageSize.width,\r\n        60,\r\n        \"F\"\r\n    );\r\n\r\n    doc.text(`Signed by:    Tom Wollin`, 20, 260);\r\n    doc.text(\r\n        `Signed by:    ${formData[\"full_name\"] || \"\"}`,\r\n        doc.internal.pageSize.width / 2 + 20,\r\n        260\r\n    );\r\n    doc.text(`On behalf of:  plan.com`, 20, 270);\r\n    doc.text(\r\n        `On behalf of:  ${formData[\"supplier\"] || \"\"}`,\r\n        doc.internal.pageSize.width / 2 + 20,\r\n        270\r\n    );\r\n\r\n    doc.text(`Date: ${new Date().toLocaleDateString()}`, 20, 280);\r\n    doc.text(\r\n        `Date: ${new Date().toLocaleDateString()}`,\r\n        doc.internal.pageSize.width / 2 + 20,\r\n        280\r\n    );\r\n\r\n    return doc;\r\n}\r\n\r\n// Convert PDF to Base64\r\nfunction pdfToBase64(doc) {\r\n    return new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(doc.output(\"blob\"));\r\n        reader.onload = () => resolve(reader.result.split(\",\")[1]);\r\n    });\r\n}\r\n// Automatically download the PDF\r\nfunction downloadPDF(doc, filename = \"form_submission.pdf\") {\r\n    doc.save(filename);\r\n}\r\n\r\nasync function sendPDFAsJSON(pdfBase64, webhookUrl, formSelector) {\r\n    if (!webhookUrl) {\r\n        console.error(\"Webhook URL is required to send an email.\");\r\n        return;\r\n    }\r\n    const accountId = getAccountIdFromURL();\r\n    const payload = JSON.stringify({\r\n        id: accountId,\r\n        filename: \"form_submission.pdf\",\r\n        fileContent: pdfBase64,\r\n    });\r\n    try {\r\n        const response = await fetch(webhookUrl, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: payload,\r\n        });\r\n\r\n        if (response.ok) {\r\n            //   alert(\"PDF sent successfully!\");\r\n            console.log(\"PDF sent successfully!\");\r\n            if (formSelector === \"#self_billing_agreement_form\") {\r\n                document.querySelector(\r\n                    \"#confirmation_self_billing_agree_form\"\r\n                ).style.display = \"none\";\r\n                document.querySelector(\"#page-title\").style.display = \"none\";\r\n                document.querySelector(\"#progress-bar-block\").style.display = \"none\";\r\n                document.querySelector(\"#success-page\").style.display = \"block\";\r\n            }\r\n        } else {\r\n            //   alert(\"Failed to send PDF.\");\r\n            console.log(\"Failed to send PDF.\");\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error sending PDF:\", error);\r\n    }\r\n}\r\n// Main reusable handler\r\nasync function handleFormSubmission({\r\n    curForm,\r\n    nextForm,\r\n    formSelector,\r\n    title = \"Form Submission\",\r\n    downloadFilename = \"form_submission.pdf\",\r\n    emailFieldName = \"email\",\r\n    webhookUrl = \"https://test\",\r\n}) {\r\n    if (!validateAllFields(curForm)) {\r\n        console.log(\"validation error\");\r\n        return;\r\n    }\r\n    const formData = collectFormData(formSelector);\r\n    if (!formData) return;\r\n    let doc;\r\n    if (formSelector === \"#partner_agreement_form\") {\r\n        doc = await generatePDFPartner(title, formData);\r\n    } else {\r\n        doc = await generatePDFSelfBilling(title, formData);\r\n        downloadPDF(doc, downloadFilename);\r\n    }\r\n    // Automatically download the PDF\r\n    formatSelfBillingInputs();\r\n    const current = document.querySelector(curForm);\r\n    const next = document.querySelector(nextForm);\r\n    current.style.display = \"none\";\r\n    next.style.display = \"block\";\r\n    if (curForm === \"#partner_agreement_confirmation_form\") {\r\n        document.querySelector(\"#step9\").classList.add(\"active\");\r\n    }\r\n    // Send the PDF as JSON\r\n    if (webhookUrl) {\r\n        const pdfBase64 = await pdfToBase64(doc);\r\n        await sendPDFAsJSON(pdfBase64, webhookUrl, formSelector);\r\n    }\r\n}\r\n\r\n// Set up click event listener for multiple buttons\r\nfunction initializePdfHandler(buttonId, config) {\r\n    const button = document.querySelector(buttonId);\r\n    if (!button) {\r\n        console.error(`Button not found: ${buttonId}`);\r\n        return;\r\n    }\r\n\r\n    button.addEventListener(\"click\", () => handleFormSubmission(config));\r\n}\r\n\r\n// Function to fetch the user's IP address and display it\r\nfunction setIPAddress(elementId) {\r\n    const ipElement = document.querySelector(elementId);\r\n    if (!ipElement) {\r\n        console.error(`Element with id '${elementId}' not found.`);\r\n        return;\r\n    }\r\n\r\n    // Fetch the IP address using a public API\r\n    fetch(\"https://api64.ipify.org?format=json\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            ipElement.textContent = data.ip; // Set IP address\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error fetching IP address:\", error);\r\n            ipElement.textContent = \"Unable to retrieve IP\";\r\n        });\r\n}\r\n\r\n// Simple function to navigate forms\r\nfunction switchForm(\r\n    checkboxSelector,\r\n    buttonSelector,\r\n    currentFormSelector,\r\n    nextFormSelector\r\n) {\r\n    const checkbox = document.querySelector(checkboxSelector);\r\n    const button = document.querySelector(buttonSelector);\r\n    const currentForm = document.querySelector(currentFormSelector);\r\n    const nextForm = document.querySelector(nextFormSelector);\r\n\r\n    if (!button || !currentForm || !nextForm) {\r\n        console.error(\"Button or forms not found.\");\r\n        return;\r\n    }\r\n\r\n    button.addEventListener(\"click\", () => {\r\n        if (checkbox.checked) {\r\n            currentForm.style.display = \"none\"; // Hide current form\r\n            nextForm.style.display = \"block\"; // Show next form\r\n            if (buttonSelector === \"#partner_agreement_btn\") {\r\n                document.querySelector(\"#step8\").classList.add(\"active\");\r\n            }\r\n            if (buttonSelector === \"#self_billing_agreement_btn\") {\r\n                document.querySelector(\"#step10\").classList.add(\"active\");\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction toggleButtonWithClass(\r\n    checkboxSelector,\r\n    buttonSelector,\r\n    activeClass = \"next-button\",\r\n    inactiveClass = \"inactive\"\r\n) {\r\n    const checkbox = document.querySelector(checkboxSelector);\r\n    const button = document.querySelector(buttonSelector);\r\n\r\n    if (!checkbox || !button) {\r\n        console.error(\"Checkbox or button not found.\");\r\n        return;\r\n    }\r\n\r\n    function updateButtonState() {\r\n        if (checkbox.checked) {\r\n            button.classList.add(activeClass);\r\n            button.classList.remove(inactiveClass);\r\n            button.disabled = false;\r\n        } else {\r\n            button.classList.remove(activeClass);\r\n            button.classList.add(inactiveClass);\r\n            button.disabled = true;\r\n        }\r\n    }\r\n\r\n    // Attach event listener\r\n    checkbox.addEventListener(\"change\", updateButtonState);\r\n\r\n    // Set initial state\r\n    updateButtonState();\r\n}\r\n\r\n// Function to set current date in MM/DD/YYYY format\r\nfunction setCurrentDate(selector) {\r\n    const dateElement = document.querySelector(selector);\r\n    if (!dateElement) {\r\n        console.error(`Element with selector \"${selector}\" not found.`);\r\n        return;\r\n    }\r\n\r\n    // Get current date in DD/MM/YYYY format\r\n    const today = new Date();\r\n    const formattedDate = `${today.getDate()}/${today.getMonth() + 1\r\n        }/${today.getFullYear()}`;\r\n    // Set the date value\r\n    if (dateElement.tagName === \"INPUT\" || dateElement.tagName === \"TEXTAREA\") {\r\n        dateElement.value = formattedDate; // For input or textarea fields\r\n    } else {\r\n        dateElement.textContent = formattedDate; // For other elements (e.g., span, div)\r\n    }\r\n}\r\n// Initialize the multi-step form with webhook integration\r\nfunction initializeMultiStepForm() {\r\n    const createAccountButton = document.querySelector(\r\n        \"#create_account_next_btn\"\r\n    );\r\n    const partnerAgreementForm = document.querySelector(\r\n        \"#partner_agreement_form\"\r\n    );\r\n    const createForm = document.querySelector(\"#create_form\");\r\n\r\n    if (!createAccountButton || !partnerAgreementForm || !createForm) {\r\n        console.error(\"Required elements not found.\");\r\n        return;\r\n    }\r\n\r\n    // Form selectors\r\n    const formSelectors = [\r\n        \"#company_details_form\",\r\n        \"#address_details_form\",\r\n        \"#bank_details_form\",\r\n        \"#criteria_form\",\r\n        \"#contacts_form\",\r\n    ];\r\n    // Select all forms dynamically\r\n    const forms = formSelectors.map((selector) =>\r\n        document.querySelector(selector)\r\n    );\r\n\r\n    // Ensure required elements exist\r\n    if (forms.some((form) => !form)) {\r\n        console.error(\"One or more forms are missing.\");\r\n        return;\r\n    }\r\n\r\n    // Capture account ID from URL\r\n    const accountId = getAccountIdFromURL();\r\n\r\n    createAccountButton.addEventListener(\"click\", async function (e) {\r\n        e.preventDefault();\r\n\r\n        // Validate all forms before proceeding\r\n        if (!formSelectors.every(validateAllFields)) {\r\n            return;\r\n        }\r\n\r\n        // Gather form data and prepare JSON payload\r\n        const formData = await gatherAllFormData(forms);\r\n        // VAT file upload\r\n        const vatfileContainer = document.getElementById(\"vat-file-upload\");\r\n        let fileData = \"\"; // Use `let` instead of `const`\r\n        if (!vatfileContainer) {\r\n            console.error(\"VAT file upload container not found\");\r\n        } else {\r\n            const vatFileInput = vatfileContainer.querySelector(\"input[type='file']\");\r\n\r\n            if (vatFileInput && vatFileInput.files.length > 0) {\r\n                try {\r\n                    fileData = await convertFileToBase64(vatFileInput.files[0]);\r\n                } catch (error) {\r\n                    console.error(\"Error converting file:\", error);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Format the payload\r\n        const payload = {\r\n            triggerType: \"form_submission\",\r\n            payload: {\r\n                name: \"Email\",\r\n                siteId: \"679222b25d1a12f8f553b070\",\r\n                data: formData,\r\n                vatFileData: fileData,\r\n                submittedAt: new Date().toISOString(),\r\n                id: accountId, // Use accountId for tracking\r\n                formId: \"6793935ad52ab69a9329c296\",\r\n                formElementId: \"a4991cc1-4b8a-4208-afee-54a28f860cf8\",\r\n                pageId: \"679222b25d1a12f8f553b06e\",\r\n                publishedPath: \"/\",\r\n                schema: [],\r\n            },\r\n        };\r\n\r\n        try {\r\n            await sendToWebhook(payload);\r\n            // Proceed to next stage\r\n            createForm.style.display = \"none\";\r\n            partnerAgreementForm.style.display = \"block\";\r\n            document.querySelector(\"#step7\").classList.add(\"active\");\r\n            setCurrentDate(\"#partner_agreement_cur_date\");\r\n            updateElementValue(\r\n                \"Company-Details-Company-name\",\r\n                \"company_name_replace\"\r\n            );\r\n            //   updateElementValue(\r\n            //     \"Company-Details-Trading-Name\",\r\n            //     \"trading_name_replace\"\r\n            //   );\r\n            updateElementValue(\r\n                \"Company-Details-Company-Type\",\r\n                \"company_type_replace\"\r\n            );\r\n            updateElementValue(\"Reg-Address-First-Line\", \"addr_replace\");\r\n            updateElementValue(\"Reg-Address-City\", \"city_replace\");\r\n            updateElementValue(\"Reg-Address-Postcode\", \"postcode_replace\");\r\n            // pdf generation\r\n            setCurrentDate(\"#pdf_partner_agree_date\");\r\n            updateElementValue(\r\n                \"Company-Details-Company-name\",\r\n                \"pdf_company_name_replace\"\r\n            );\r\n            updateElementValue(\r\n                \"Company-Details-Company-Type\",\r\n                \"pdf_company_type_replace\"\r\n            );\r\n            updateElementValue(\"Reg-Address-First-Line\", \"pdf_addr_replace\");\r\n            updateElementValue(\"Reg-Address-City\", \"pdf_town_replace\");\r\n            updateElementValue(\"Reg-Address-Postcode\", \"pdf_postcode_replace\");\r\n\r\n        } catch (error) {\r\n            console.error(\"Error sending data to webhook:\", error);\r\n            //   alert(\"There was an error submitting your data. Please try again.\");\r\n            console.log(\"There was an error submitting your data. Please try again.\");\r\n        }\r\n    });\r\n}\r\n\r\n// Capture account ID from URL\r\nfunction getAccountIdFromURL() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    return urlParams.get(\"accountid\") || \"unknown-accountid\";\r\n}\r\n\r\n// Gather form data (including file upload)\r\nasync function gatherAllFormData(forms) {\r\n    const formData = {};\r\n\r\n    for (const form of forms) {\r\n        const fields = form.querySelectorAll(\"input, select, textarea\");\r\n        for (const field of fields) {\r\n            if (field.type === \"file\" && field.files.length > 0) {\r\n                continue;\r\n                // formData[field.name] = await convertFileToBase64(field.files[0]);\r\n            } else if (field.type === \"checkbox\") {\r\n                formData[field.name] = field.checked.toString();\r\n            } else {\r\n                formData[field.name] = field.value;\r\n            }\r\n        }\r\n    }\r\n\r\n    return formData;\r\n}\r\n\r\n// Convert file to Base64\r\nfunction convertFileToBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n}\r\n\r\n// Send data to webhook\r\nasync function sendToWebhook(payload) {\r\n    const webhookUrl =\r\n        \"https://prod-56.uksouth.logic.azure.com/workflows/680656bfced4484ba11a1c5e51b400b9/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=wC1hD4ycXcwdJyhA30dbKlQ2NFMV7l0TTH8fPcKMN0U\";\r\n\r\n    const response = await fetch(webhookUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(payload),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(\"Failed to send data to webhook\");\r\n    }\r\n}\r\n\r\nfunction addDefaultOptionToSelect(selectClass, text) {\r\n    // Get all select elements with the given class name\r\n    const selects = document.querySelectorAll(`.${selectClass}`);\r\n    // Loop through each select element and add the default option\r\n    selects.forEach((select) => {\r\n        // Check if the default option is already present, to avoid duplicates\r\n        if (!select.querySelector('option[value=\"\"]')) {\r\n            const defaultOption = document.createElement(\"option\");\r\n            defaultOption.value = \"\";\r\n            defaultOption.textContent = text;\r\n            defaultOption.selected = true;\r\n            defaultOption.disabled = true;\r\n            defaultOption.classList.add(\"default-option\"); // <-- Add this line\r\n            defaultOption.style.color = \"grey\"; // <-- directly set text color here\r\n            // Insert the default option as the first child\r\n            select.insertBefore(defaultOption, select.firstChild);\r\n        }\r\n    });\r\n}"],
  "mappings": "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",
  "names": []
}
